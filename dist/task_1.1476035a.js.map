{"version":3,"sources":["task_1.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then"],"mappings":"AACA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE,EAAI;AAEhB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,IAAAA,UAAU,CAAC,YAAM;AACbF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFS,CAAV;AAGH,GAJM,CAAP;AAKH,CAPD;;AASA,IAAMK,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI;AAAA,SAAIC,OAAO,CAACC,GAAR,0BAA8BF,IAA9B,QAAJ;AAAA,CAAnB,EAEA;;;AACAP,KAAK,CAAC,IAAD,CAAL,CAAYU,IAAZ,CAAiBJ,MAAjB,GAA0B;;AAC1BN,KAAK,CAAC,IAAD,CAAL,CAAYU,IAAZ,CAAiBJ,MAAjB,GAA0B;;AAC1BN,KAAK,CAAC,IAAD,CAAL,CAAYU,IAAZ,CAAiBJ,MAAjB,GAA0B","file":"task_1.1476035a.js","sourceRoot":"..\\src","sourcesContent":["\r\nconst delay = ms => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(ms);\r\n        })\r\n    })\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms"]}